// This file is part of the materials accompanying the book
// "The Elements of Computing Systems" by Nisan and Schocken,
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Send load value into selected address
    DMux8Way(in=load, sel=address[6..8], a=dm0, b=dm1, c=dm2, d=dm3, e=dm4, f=dm5, g=dm6, h=dm7);

    RAM64(in=in, load=dm0, address=address[0..5], out=o0);
    RAM64(in=in, load=dm1, address=address[0..5], out=o1);
    RAM64(in=in, load=dm2, address=address[0..5], out=o2);
    RAM64(in=in, load=dm3, address=address[0..5], out=o3);
    RAM64(in=in, load=dm4, address=address[0..5], out=o4);
    RAM64(in=in, load=dm5, address=address[0..5], out=o5);
    RAM64(in=in, load=dm6, address=address[0..5], out=o6);
    RAM64(in=in, load=dm7, address=address[0..5], out=o7);

    // Output the register at 'address', by giving this Mux the same selection
    Mux8Way16(a=o0, b=o1, c=o2, d=o3, e=o4, f=o5, g=o6, h=o7, sel=address[6..8], out=out);
}
